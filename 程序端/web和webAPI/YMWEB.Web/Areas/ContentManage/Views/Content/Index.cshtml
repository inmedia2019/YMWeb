@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<style>
    .layui-table-tool > .layui-table-tool-temp {
        padding-right: 0px;
    }
</style>

<script>
    layui.use(['jquery', 'form', 'table', 'common', 'soulTable', 'dtree', 'commonTable', 'optimizeSelectOption'], function () {
         var $ = layui.jquery,
             form = layui.form,
             commonTable = layui.commonTable,
             soulTable = layui.soulTable,
             table = layui.table,
             dtree = layui.dtree,
             common = layui.common;
         var entity;
         wcLoading.close();
         //权限控制(js是值传递)
         toolbarDemo.innerHTML = common.authorizeButtonNew(toolbarDemo.innerHTML);
          // 初始化树
        var DemoTree = dtree.render({
            elem: "#demoTree",
            height: 'full-15',
            width: '400px',
            method: "GET",
            async: true,
            checkbar: true,
            line: true,  // 显示树线
            scroll: "#toolbarDiv", // 绑定div元素
            icon: ["0", "-1"],  // 显示非最后一级节点图标，隐藏最后一级节点图标
            url: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Channel/GetTreeGridJson?v=" + new Date().Format("yyyy-MM-dd hh:mm:ss") // 使用url加载（可与data加载同时存在）
        });
         var treeid = "";
         var fileContentArr = new Array();

         dtree.on("chooseDone('demoTree')", function (obj) {
             debugger;
             var ids = [];
             for (var i in obj.checkbarParams) {
                 ids.push(obj.checkbarParams[i].nodeId);
             }
             treeid = ids.join(',');
             fileContentArr = listFilter(obj.checkbarParams);
             $("#txt_keyword").val('');
             $('button[lay-filter="data-search-btn"]').click();//按钮刷新
         });
        // 绑定节点点击
         dtree.on("node('demoTree')", function (obj) {
            DemoTree.clickNodeCheckbar(obj.param.nodeId);// 点击节点选中复选框、
        });
         var ins=commonTable.rendertable({
             elem: '#currentTableId',
             id: 'currentTableId',
             url: '@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Content/GetGridJson',
             where: {
                 itemId: "",
                 keyword: "",
             },
             cols: [[
                 { type: "checkbox", width: 50 },
                 ////此处需修改
                 //{ field: 'F_Titile', title: '文章标题', width: 120, sort: true, templet: '#titleLink' },
                 { field: 'F_Titile', title: '内容标题', width: 250, sort: true, templet: '#titleLink' },
                 { field: 'F_TitleLink', title: '内容链接', width: 200 },
                 {
                     field: 'F_ChannelId', title: '所属栏目', width: 200, sort: true,
                     templet: function (d) {
                         return top.clients.channel[d.F_ChannelId] == undefined ? "" : top.clients.channel[d.F_ChannelId].name;
                     }
                 },
                 //{
                 //    field: 'F_Author', title: '专家', width: 120, sort: true
                 //},
                 //{
                 //    field: 'F_Tags', title: '内容标签', width: 120, sort: true

                 //},
                 //{
                 //    field: 'F_CoverImage', title: '图片', width: 100, templet: function (d) {
                 //        if (d.F_CoverImage == "") {
                 //            return "";
                 //        } else {
                 //            return '<a href="javascript:"><img class="img-sm img-center" src="' + d.F_CoverImage + '" onclick="previewImg(this)"   style="width: 30px !important;height: 30px !important;" ></a>';

                 //        }
                 //    }
                 //},
                 { field: 'F_HitCount', title: '浏览量', width: 100, sort: true },
                 { field: 'F_LikeCount', title: '点赞量', width: 100, sort: true },
                 { field: 'F_CommentCount', title: '评论数', width: 100, sort: true },
                 {
                     field: 'F_CreatorTime', title: '发布时间', width: 200, sort: true,
                     templet: function (d) {
                         if (d.F_CreatorTime) {
                             var time = new Date(d.F_CreatorTime);
                             return time.Format("yyyy-MM-dd hh:mm:ss");
                         }
                         return '';
                     }
                 },

                 {
                     field: 'F_CreatorUserId', title: '内容发布者', width: 120, sort: true,
                     templet: function (d) {
                         return top.clients.user[d.F_CreatorUserId] == undefined ? "" : top.clients.user[d.F_CreatorUserId].fullname;
                     }
                 },
                 {
                     field: 'F_EnabledMark', title: '状态', width: 120,fixed: 'right', templet: function (d) {
                         if (d.F_EnabledMark == true) {
                             return "<span class='layui-btn layui-btn-normal layui-btn-xs'>已发布</span>";
                         } else {
                             return "<span class='layui-btn layui-btn-warm layui-btn-xs'>未发布</span>";
                         }
                     }
                 }
             ]]
         });
         // 监听搜索操作
         form.on('submit(data-search-btn)', function (data) {
             //执行搜索重载
             commonTable.reloadtable({
                 elem: 'currentTableId',
                 curr: 1,
                 where: {
                     itemId: treeid,
                     keyword: data.field.txt_keyword,
                 },
             });
             entity = null;
             return false;
         });
         // 监听搜索操作
         form.on('submit(item-search-btn)', function (data) {
             // 调用内置函数搜索节点
             DemoTree.fuzzySearch(data.field.item_keyword);
             return false;
         });
         table.on('row(currentTableId)', function (obj) {
             obj.tr.find("div.layui-unselect.layui-form-checkbox")[0].click();
             entity = obj;
         })
         //toolbar监听事件
         table.on('toolbar(currentTableFilter)', function (obj) {
             if (obj.event === 'add') {  // 监听添加操作
                 if (fileContentArr.length == 0) {
                     common.modalMsg("请选择栏目", "warning");
                     return false;
                 }
                 if (fileContentArr.length > 1) {
                     common.modalMsg("只能选择单个栏目", "warning");
                     return false;
                 }
                 common.openNewTabByIframe({
                     title: "添加内容",
                     href: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Content/" + fileContentArr[0].code + "?event=add&itemId=" + fileContentArr[0].nodeId
                 });
             }
             else if (obj.event === 'delete') {
                 var entity = table.checkStatus('currentTableId').data;
                 if (entity.length == 0) {
                     common.modalMsg("未选中数据", "warning");
                     return false;
                 }
                 var ids = [];
                 for (var i = 0; i < entity.length; i++) {
                     ids.push(entity[i].F_Id);
                 }
                 common.deleteForm({
                     url: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Content/DeleteForm",
                     param: { keyValue: ids.join(',') },
                     success: function () {
                         common.reload('data-search-btn');
                         entity = null;
                   }
               });
             }
             else if (obj.event === 'export') {
                 var entity = table.checkStatus('currentTableId').data;
                 if (entity.length == 0) {
                     soulTable.export('currentTableId')
                 }
                 else {
                     table.exportFile(ins.config.id, entity, 'xls');
                 }
             }
             else if (obj.event === 'edit') {
                 if (fileContentArr.length == 0) {
                     common.modalMsg("请选择栏目", "warning");
                     return false;
                 }
                 if (fileContentArr.length > 1) {
                     common.modalMsg("只能选择单个栏目", "warning");
                     return false;
                 }
                 var entity = table.checkStatus('currentTableId').data;
                 if (entity.length == 0) {
                     common.modalMsg("未选中数据", "warning");
                     return false;
                 }
                 if (entity.length > 1) {
                     common.modalMsg("只能选择一条编辑", "warning");
                     return false;
                 }
                 common.openNewTabByIframe({
                  title: "编辑内容",
                     href: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Content/" + fileContentArr[0].code + "?event=edit&itemId=" + fileContentArr[0].nodeId + "&keyValue=" + entity[0].F_Id
               });
           }
              else if (obj.event === 'itemstype') {
                 common.openNewTabByIframe({
                    title: "栏目管理",
                     href: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Channel/Index",
                    checkOpen: false
                });
             }
             else if (obj.event === 'publish') {
                 var entity = table.checkStatus('currentTableId').data;
                 if (entity.length == 0) {
                     common.modalMsg("未选中数据", "warning");
                     return false;
                 }
                 var ids = [];
                 for (var i = 0; i < entity.length; i++) {
                     ids.push(entity[i].F_Id);
                     if (entity[i].F_EnabledMark) {
                         common.modalMsg("您已发布！请勿重新发布！", "warning");
                         return false;
                     }
                 }
                 common.submitPost({
                     url: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Content/PublishForm",
                     prompt:"确认发布吗？",
                     param: { keyValue: ids.join(',') },
                     success: function () {
                         common.reload('data-search-btn');
                         entity = null;
                   }
               });
             }
             else if (obj.event === 'recycle') {
                 var entity = table.checkStatus('currentTableId').data;
                 if (entity.length == 0) {
                     common.modalMsg("未选中数据", "warning");
                     return false;
                 }
                 var ids = [];
                 for (var i = 0; i < entity.length; i++) {
                     ids.push(entity[i].F_Id);
                     if (!entity[i].F_EnabledMark) {
                         common.modalMsg("您已下架！请勿重新下架！", "warning");
                         return false;
                     }
                 }
                 common.submitPost({
                     url: "@(YMWeb.Code.GlobalContext.SystemConfig.VirtualDirectory)/ContentManage/Content/RecycleForm",
                     prompt:"确认下架吗？",
                     param: { keyValue: ids.join(',') },
                     success: function () {
                         common.reload('data-search-btn');
                         entity = null;
                   }
               });
            }
           return false;
       });
     });
    function previewImg(obj) {
        var imgHtml = "<img src='" + obj.src + "' />";
        //弹出层
        layer.open({
            type: 1,
            shade: 0.8,
            offset: 'auto',
            area: ['750px', '600px'],
            shadeClose: true,//点击外围关闭弹窗
            scrollbar: false,//不现实滚动条
            title: "图片预览", //不显示标题
            content: imgHtml, //捕获的元素，注意：最好该指定的元素要存放在body最外层，否则可能被其它的相对元素所影响
            cancel: function () {
                //layer.msg('捕获就是从页面已经存在的元素上，包裹layer的结构', { time: 5000, icon: 6 });
            }
        });
    }
    function listFilter(obj) {
        var newArrj = new Array();
        var newArrk = new Array();
        var newArrg = new Array();
        var newArrh = new Array();
        if (obj.length > 0) {
            var j = 0;
            var k = 0;
            var g = 0;
            var h = 0;
            for (var i in obj) {
                if (obj[i].parentId == "0" && obj[i].level == "1") {
                    newArrj.push(obj[i]);
                    j += 1;
                }
                if (obj[i].parentId != "0" && obj[i].level==  "2") {
                    newArrk.push(obj[i]);
                    k += 1;
                }
                if (obj[i].parentId != "0" && obj[i].level == "3") {
                    newArrg.push(obj[i]);
                    g += 1;
                }
                if (obj[i].parentId != "0" && obj[i].level == "4") {
                    newArrh.push(obj[i]);
                    h += 1;
                }
            }
            if (j ==1 && k ==1) {
                if (j == 1 && k == 1 && g == 1) {
                    if (j == 1 && k == 1 && g == 1 && h == 1) {
                        return newArrh;
                    }
                    return newArrg;
                }
                return newArrk;
            }
            return obj;
        }
        return obj;
    }
    function setCopy(content, id) {
        var str = content;
        if (id != "19f83081-1ddc-4823-a9e3-7860dcecf199" && id != "cda2389d-f37b-458c-bbf3-ddac0c62009f") {
            str= content.toString().replaceAll("dis", "dis4");
        }
        if (navigator.userAgent.toLowerCase().indexOf('ie') > -1) {
            clipboardData.setData('Text', str);
            alert("该地址已经复制到剪切板");
        } else {
            prompt("请复制签到链接手动生成二维码:", str);
        }
    }
</script>
<script type="text/html" id="titleLink">
    <a href="{{d.F_Id}}" id={{d.F_ChannelId}} onclick="setCopy(this.href,this.id);return false;" class="layui-table-link" target="_self">{{ d.F_Titile }}</a>
</script>
<div class="layui-fluid" style="padding:0 0px">
    <div class="layui-row layui-col-space5">
        <div class="layui-col-md3 layui-col-xs4">
            <div class="layui-card" style="text-align:left;overflow: auto;" id="toolbarDiv">
                <fieldset class="table-search-fieldset" style="border:1px solid #e6e6e6">
                    <form class="layui-form layui-form-pane" action="">
                        <div class="layui-form-item">
                            <div class="layui-inline">
                                <input type="text" id="item_keyword" name="item_keyword" autocomplete="off" class="layui-input" placeholder="">
                            </div>
                            <div class="layui-inline">
                                <button type="submit" class="layui-btn layui-btn-primary" lay-submit lay-filter="item-search-btn"><i class="layui-icon">&#xe615;</i> 搜 索</button>
                            </div>
                        </div>
                    </form>
                </fieldset>
                <ul id="demoTree" class="dtree" data-id="0"></ul>
            </div>
        </div>
        <div class="layui-col-md9 layui-col-xs8">
            <div class="layui-card" style="padding: 5px;">
                <fieldset class="table-search-fieldset" style="border:1px solid #e6e6e6">
                    @*<legend>搜索信息</legend>*@
                    <form class="layui-form layui-form-pane" action="">
                        <div class="layui-form-item">
                            <div class="layui-inline">
                                <input type="text" id="txt_keyword" name="txt_keyword" autocomplete="off" class="layui-input" placeholder="">
                            </div>
                            <div class="layui-inline">
                                <button type="submit" class="layui-btn layui-btn-primary" lay-submit lay-filter="data-search-btn"><i class="layui-icon">&#xe615;</i> 搜 索</button>
                            </div>
                        </div>
                    </form>
                </fieldset>
                <script type="text/html" id="toolbarDemo">
                    <div class="layui-btn-container" id="toolbar">
                        <button id="NF-add" authorize="yes" class="layui-btn layui-btn-sm data-add-btn layui-hide" lay-event="add"><i class="layui-icon">&#xe654;</i>新建</button>
                        <button id="NF-edit" authorize="yes" class="layui-btn layui-btn-sm layui-btn-warm data-edit-btn layui-hide" lay-event="edit"><i class="layui-icon">&#xe642;</i>修改</button>
                        <button id="NF-delete" authorize="yes" class="layui-btn layui-btn-sm layui-btn-danger data-delete-btn layui-hide" lay-event="delete"> <i class="layui-icon">&#xe640;</i>删除</button>
                        <button id="NF-publish" authorize="yes" class="layui-btn layui-btn-sm  data-itemstype-btn layui-hide" lay-event="publish"> <i class="fa fa-key"></i>发布</button>
                        <button id="NF-recycle" authorize="yes" class="layui-btn layui-btn-sm  data-itemstype-btn layui-hide" lay-event="recycle"> <i class="fa fa-key"></i>下架</button>
                        <button id="NF-export" authorize="yes" class="layui-btn layui-btn-sm  data-export-btn layui-hide" lay-event="export"> <i class="fa fa-key"></i>导出</button>
                        <button id="NF-itemstype" authorize="yes" class="layui-btn layui-btn-sm  data-itemstype-btn layui-hide" lay-event="itemstype"> <i class="fa fa-key"></i>栏目管理</button>
                    </div>
                </script>
                <table class="layui-hide" id="currentTableId" lay-filter="currentTableFilter"></table>
            </div>
        </div>
    </div>
</div>